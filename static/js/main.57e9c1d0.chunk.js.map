{"version":3,"sources":["component/cards/card-monster-component.jsx","component/card-list/card-list-component.jsx","component/search-box/search-box-component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["CardMonster","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleOnChange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAYeA,EARK,SAAAC,GAAK,OACpB,sBAAKC,UAAU,eAAf,UACG,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,mBACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCFZC,G,MAAW,SAAAP,GAAK,OAC1B,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAEvB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQC,WCNzBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,eAAf,OACrB,uBAAOX,UAAU,aAAaY,KAAK,SAASF,YAAaA,EAAcG,SAAWF,MCqDvEG,GC1DA,I,wDDYb,aAAc,IAAD,8BACX,gBAgBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALJ,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO7C,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACXU,EAAgBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC3CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,qBAAK9B,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACA,8CACA,cAAC,EAAD,CACEU,YAAY,iBACZC,eAAiBgB,KAAKZ,eAKvB,cAAC,EAAD,CAAUR,SAAUqB,a,GAvCTI,cEEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.57e9c1d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card-monster-style.css';\r\n\r\nconst CardMonster = props => (\r\n     <div className=\"card-monster\">\r\n        <img src={`https://robohash.org/${props.monster.id}.png?set=set3`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\nexport default CardMonster;\r\n","import React from 'react';\r\n\r\nimport CardMonster from '../cards/card-monster-component.jsx';\r\n\r\nimport './card-list-style.css';\r\n\r\nexport const  CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n           \r\n            <CardMonster key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box-style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleOnChange}) => (\r\n    <input className=\"search-box\" type=\"search\" placeholder={placeholder}  onChange={ handleOnChange } />\r\n);","import React , {Component} from 'react';\n\nimport {CardList} from './component/card-list/card-list-component';\n\nimport {SearchBox} from './component/search-box/search-box-component';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component\n{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '' \n    }\n  }\n\n\n \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n \n  handleChange = (e) => { \n    this.setState({searchField: e.target.value});\n  }\n\n render(){\n   const {monsters, searchField} = this.state;\n   const filterMonster = monsters.filter(monster => \n     monster.name.toLowerCase().includes(searchField.toLowerCase())\n   );\n   return (\n     <div className=\"App\">\n      <header className=\"app-header\">\n      <h1>Monster Card</h1>\n      <SearchBox \n        placeholder=\"Search Monster\" \n        handleOnChange={ this.handleChange }\n      />\n\n\n   \n       <CardList monsters={filterMonster} />\n      </header>\n     </div>\n   )\n }\n\n}\n\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}